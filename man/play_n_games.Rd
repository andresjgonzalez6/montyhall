% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/monty-hall-problem-Gonzalez.R
\name{play_n_games}
\alias{play_n_games}
\title{Run the game for desired number of times in a loop.}
\usage{
play_n_games(n = 100)
}
\arguments{
\item{The}{'play_n_games' function requires a numeric
value for 'n'. This number is necessary to loop
the 'play_game' function more than once.}
}
\value{
This function returns a data frame made of a list with
character vectors. The data frame matrix holds the values of
'results.df' from each loop of 'i' for 'n' number of times.
There are 'strategy' and 'outcome' columns with strings.
}
\description{
This function simulates the Monty Hall goat game many
times and builds a dataset from the combined results.
It will return a list and then a table is created
from that list for viewing.
}
\details{
This loop simulation runs the 'play_game' function for
a number of times declared with the 'n' variable.
The default value of 'n' is 100.
The 'dplyr' library is used to display the
results of the loop in a table. 'results.list' is the
collector vector that each additional loop appends to
form the dataset. 'game.outcome' is just another vector
for the 'game.results' in the 'play_game' function.
'game.outcome' is appended into 'results.list'.
The variable 'i' is the iterator variable
that counts the number of loops that the 'play_game'
function runs. This iterator also gives the 'results.list'
its index values and corresponding results per loop number.
'results.df' is the data frame that is made up of
'results.list' and is manipulated by the 'dplyr' library
to be viewable as a data table.
}
\examples{
play_n_games(n=100)
play_n_games(n=5)
play_n_games(n=3000)

}
